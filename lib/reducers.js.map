{"version":3,"file":"reducers.js","names":["START","actionTypes","SET","SET_PROFILE","MERGE","LOGIN","LOGOUT","LOGIN_ERROR","CLEAR_ERRORS","REMOVE","NO_VALUE","SET_LISTENER","UNSET_LISTENER","AUTHENTICATION_INIT_STARTED","AUTHENTICATION_INIT_FINISHED","AUTH_EMPTY_CHANGE","AUTH_LINK_SUCCESS","UNAUTHORIZED_ERROR","AUTH_UPDATE_SUCCESS","AUTH_RELOAD_SUCCESS","PROFILE_UPDATE_SUCCESS","isInitializingReducer","state","arguments","length","action","type","requestingReducer","_ref","path","_objectSpread","_defineProperty","getSlashStrPath","requestedReducer","_ref2","timestampsReducer","_ref3","Date","now","createDataReducer","actionKey","_setWith2","default","Object","getDotStrPath","previousData","_get2","mergedData","_assign2","recursiveUnset","preserve","Array","isArray","_pick2","_isObject2","preserveValuesFromState","Error","authReducer","isLoaded","isEmpty","auth","toJSON","payload","reauthenticate","authErrorReducer","authError","profileReducer","profile","assign","errorsReducer","concat","_toConsumableArray","errors","filter","listenersById","_ref4","id","_omit2","allListeners","_ref5","lId","listenersReducer","exports","combineReducers","byId","allIds","dataReducer","orderedReducer"],"sources":["../src/reducers.js"],"sourcesContent":["import { pick, omit, get, isObject } from 'lodash'\nimport { setWith, assign } from 'lodash/fp'\nimport { actionTypes } from './constants'\nimport {\n  getSlashStrPath,\n  getDotStrPath,\n  recursiveUnset,\n  combineReducers,\n  preserveValuesFromState\n} from './utils/reducers'\n\nconst {\n  START,\n  SET,\n  SET_PROFILE,\n  MERGE,\n  LOGIN,\n  LOGOUT,\n  LOGIN_ERROR,\n  CLEAR_ERRORS,\n  REMOVE,\n  NO_VALUE,\n  SET_LISTENER,\n  UNSET_LISTENER,\n  AUTHENTICATION_INIT_STARTED,\n  AUTHENTICATION_INIT_FINISHED,\n  AUTH_EMPTY_CHANGE,\n  AUTH_LINK_SUCCESS,\n  UNAUTHORIZED_ERROR,\n  AUTH_UPDATE_SUCCESS,\n  AUTH_RELOAD_SUCCESS,\n  PROFILE_UPDATE_SUCCESS\n} = actionTypes\n\n/**\n * Reducer for isInitializing state. Changed by `AUTHENTICATION_INIT_STARTED`\n * and `AUTHENTICATION_INIT_FINISHED` actions.\n * @param  {object} [state=false] - Current isInitializing redux state\n * @param  {object} action - Object containing the action that was dispatched\n * @param  {string} action.type - Type of action that was dispatched\n * @returns {object} Profile state after reduction\n */\nexport function isInitializingReducer(state = false, action) {\n  switch (action.type) {\n    case AUTHENTICATION_INIT_STARTED:\n      return true\n    case AUTHENTICATION_INIT_FINISHED:\n      return false\n    default:\n      return state\n  }\n}\n\n/**\n * Reducer for requesting state.Changed by `START`, `NO_VALUE`, and `SET` actions.\n * @param  {object} [state={}] - Current requesting redux state\n * @param  {object} action - Object containing the action that was dispatched\n * @param  {string} action.type - Type of action that was dispatched\n * @param  {string} action.path - Path of action that was dispatched\n * @returns {object} Profile state after reduction\n */\nexport function requestingReducer(state = {}, { type, path }) {\n  switch (type) {\n    case START:\n      return {\n        ...state,\n        [getSlashStrPath(path)]: true\n      }\n    case NO_VALUE:\n    case SET:\n      return {\n        ...state,\n        [getSlashStrPath(path)]: false\n      }\n    default:\n      return state\n  }\n}\n\n/**\n * Reducer for requested state. Changed by `START`, `NO_VALUE`, and `SET` actions.\n * @param  {object} [state={}] - Current requested redux state\n * @param  {object} action - Object containing the action that was dispatched\n * @param  {string} action.type - Type of action that was dispatched\n * @param  {string} action.path - Path of action that was dispatched\n * @returns {object} Profile state after reduction\n */\nexport function requestedReducer(state = {}, { type, path }) {\n  switch (type) {\n    case START:\n      return {\n        ...state,\n        [getSlashStrPath(path)]: false\n      }\n    case NO_VALUE:\n    case SET:\n      return {\n        ...state,\n        [getSlashStrPath(path)]: true\n      }\n    default:\n      return state\n  }\n}\n\n/**\n * Reducer for timestamps state. Changed by `START`, `NO_VALUE`, and `SET` actions.\n * @param  {object} [state={}] - Current timestamps redux state\n * @param  {object} action - Object containing the action that was dispatched\n * @param  {string} action.type - Type of action that was dispatched\n * @param  {string} action.path - Path of action that was dispatched\n * @returns {object} Profile state after reduction\n */\nexport function timestampsReducer(state = {}, { type, path }) {\n  switch (type) {\n    case START:\n    case NO_VALUE:\n    case SET:\n      return {\n        ...state,\n        [getSlashStrPath(path)]: Date.now()\n      }\n    default:\n      return state\n  }\n}\n\n/**\n * Creates reducer for data state. Used to create data and ordered reducers.\n * Changed by `SET` or `SET_ORDERED` (if actionKey === 'ordered'), `MERGE`,\n * `NO_VALUE`, and `LOGOUT` actions.\n * @param {string} actionKey - Key of state for which to make reducer (data or ordered)\n * @returns {Function} Data reducer\n * @private\n */\nfunction createDataReducer(actionKey = 'data') {\n  /**\n   * Creates reducer for data state. Used to create data and ordered reducers.\n   * Changed by `SET` or `SET_ORDERED` (if actionKey === 'ordered'), `MERGE`,\n   * `NO_VALUE`, and `LOGOUT` actions.\n   * @param {object} [state={}] - Current data redux state\n   * @param {object} action - Object containing the action that was dispatched\n   * @param {string} action.type - Type of action that was dispatched\n   * @param {string} action.path - Path of action that was dispatched\n   * @returns {object} Data state after reduction\n   * @private\n   */\n  return function dataReducer(state = {}, action) {\n    switch (action.type) {\n      case SET:\n        return setWith(\n          Object,\n          getDotStrPath(action.path),\n          action[actionKey],\n          state\n        )\n      case MERGE:\n        const previousData = get(state, getDotStrPath(action.path), {}) // eslint-disable-line no-case-declarations\n        const mergedData = assign(previousData, action[actionKey]) // eslint-disable-line no-case-declarations\n        return setWith(Object, getDotStrPath(action.path), mergedData, state)\n      case NO_VALUE:\n        return setWith(Object, getDotStrPath(action.path), null, state)\n      case REMOVE:\n        if (actionKey === 'data') {\n          return recursiveUnset(getDotStrPath(action.path), state)\n        }\n        return state\n      case LOGOUT:\n        // support keeping data when logging out - #125\n        if (action.preserve) {\n          if (Array.isArray(action.preserve)) {\n            return pick(state, action.preserve) // pick returns a new object\n          } else if (isObject(action.preserve)) {\n            return action.preserve[actionKey]\n              ? preserveValuesFromState(state, action.preserve[actionKey], {})\n              : {}\n          }\n          throw new Error(\n            'Invalid preserve parameter. It must be an Object or an Array'\n          )\n        }\n        return {}\n      default:\n        return state\n    }\n  }\n}\n\n/**\n * Reducer for auth state. Changed by `LOGIN`, `LOGOUT`, and `LOGIN_ERROR` actions.\n * @param  {object} [state={isLoaded: false}] - Current auth redux state\n * @param  {object} action - Object containing the action that was dispatched\n * @param  {string} action.type - Type of action that was dispatched\n * @returns {object} Profile state after reduction\n */\nexport function authReducer(\n  state = { isLoaded: false, isEmpty: true },\n  action\n) {\n  switch (action.type) {\n    case LOGIN:\n    case AUTH_UPDATE_SUCCESS:\n      if (!action.auth) {\n        return {\n          isEmpty: true,\n          isLoaded: true\n        }\n      }\n      const auth = action.auth.toJSON ? action.auth.toJSON() : action.auth // eslint-disable-line no-case-declarations\n      // Support keeping data\n      if (action.preserve && action.preserve.auth) {\n        return preserveValuesFromState(state, action.preserve.auth, {\n          ...auth,\n          isEmpty: false,\n          isLoaded: true\n        })\n      }\n      return { ...auth, isEmpty: false, isLoaded: true }\n    case AUTH_LINK_SUCCESS:\n    case AUTH_RELOAD_SUCCESS:\n      if (!action.payload) {\n        return {\n          isEmpty: true,\n          isLoaded: true\n        }\n      }\n      return {\n        ...(action.payload.toJSON ? action.payload.toJSON() : action.payload),\n        isEmpty: false,\n        isLoaded: true\n      }\n    case LOGIN_ERROR:\n    case AUTH_EMPTY_CHANGE:\n    case LOGOUT:\n      // If it's reauthenticate keep user datas\n      if (action.reauthenticate) {\n        return preserveValuesFromState(state, true, {})\n      }\n      // Support keeping data when logging out\n      if (action.preserve && action.preserve.auth) {\n        return preserveValuesFromState(state, action.preserve.auth, {\n          isLoaded: true,\n          isEmpty: true\n        })\n      }\n      return { isLoaded: true, isEmpty: true }\n    default:\n      return state\n  }\n}\n\n/**\n * Reducer for authError state. Changed by `LOGIN`, `LOGOUT`, `LOGIN_ERROR`, and\n * `UNAUTHORIZED_ERROR` actions.\n * @param  {object} [state={}] - Current authError redux state\n * @param  {object} action - Object containing the action that was dispatched\n * @param  {string} action.type - Type of action that was dispatched\n * @returns {object} authError state after reduction\n */\nexport function authErrorReducer(state = null, action) {\n  switch (action.type) {\n    case LOGIN:\n    case LOGOUT:\n      return null\n    case LOGIN_ERROR:\n    case UNAUTHORIZED_ERROR:\n      return action.authError\n    default:\n      return state\n  }\n}\n\n/**\n * Reducer for profile state. Changed by `SET_PROFILE`, `LOGOUT`, and\n * `LOGIN_ERROR` actions.\n * @param  {object} [state={isLoaded: false}] - Current profile redux state\n * @param  {object} action - Object containing the action that was dispatched\n * @param  {string} action.type - Type of action that was dispatched\n * @returns {object} Profile state after reduction\n */\nexport function profileReducer(\n  state = { isLoaded: false, isEmpty: true },\n  action\n) {\n  switch (action.type) {\n    case SET_PROFILE:\n      if (!action.profile) {\n        return {\n          ...state,\n          isEmpty: true,\n          isLoaded: true\n        }\n      }\n      return {\n        ...action.profile,\n        isEmpty: false,\n        isLoaded: true\n      }\n    case PROFILE_UPDATE_SUCCESS:\n      return Object.assign({}, state, action.payload)\n    case LOGIN:\n      // Support keeping data when logging out\n      if (action.preserve && action.preserve.profile) {\n        return preserveValuesFromState(state, action.preserve.profile, {\n          isLoaded: true,\n          isEmpty: true\n        })\n      }\n      return {\n        isEmpty: true,\n        isLoaded: false\n      }\n    case LOGOUT:\n    case AUTH_EMPTY_CHANGE:\n      // Support keeping data when logging out\n      if (action.preserve && action.preserve.profile) {\n        return preserveValuesFromState(state, action.preserve.profile, {\n          isLoaded: true,\n          isEmpty: true\n        })\n      }\n      return { isLoaded: true, isEmpty: true }\n    default:\n      return state\n  }\n}\n\n/**\n * Reducer for errors state. Changed by `UNAUTHORIZED_ERROR`, `CLEAR_ERRORS`,\n * and `LOGOUT` actions.\n * @param  {object} [state=[]] - Current errors redux state\n * @param  {object} action - Object containing the action that was dispatched\n * @param  {string} action.type - Type of action that was dispatched\n * @param  {Function} action.preserve - `not required` Filter function for\n * preserving errors\n * @returns {object} Profile state after reduction\n */\nexport function errorsReducer(state = [], action) {\n  switch (action.type) {\n    case LOGIN_ERROR:\n    case UNAUTHORIZED_ERROR:\n      if (!Array.isArray(state)) {\n        throw new Error('Errors state must be an array')\n      }\n      return [...state, action.authError]\n    case LOGOUT:\n    case CLEAR_ERRORS:\n      // Support keeping errors through a filter function\n      if (action.preserve && action.preserve.errors) {\n        if (typeof action.preserve.errors !== 'function') {\n          throw new Error(\n            'Preserve for the errors state currently only supports functions'\n          )\n        }\n        return state.filter(action.preserve.errors) // run filter function on state\n      }\n      return []\n    default:\n      return state\n  }\n}\n\n/**\n * Reducer for listeners ids. Changed by `SET_LISTENER` and `UNSET_LISTENER`\n * actions.\n * @param {object} [state={}] - Current listenersById redux state\n * @param {object} action - Object containing the action that was dispatched\n * @param {string} action.type - Type of action that was dispatched\n * @param {string} action.path - Path of action that was dispatched\n * @param {object} action.payload - Payload object\n * @returns {object} listenersById state after reduction (used in listeners)\n * @private\n */\nfunction listenersById(state = {}, { type, path, payload }) {\n  switch (type) {\n    case SET_LISTENER:\n      return {\n        ...state,\n        [payload.id]: {\n          id: payload.id,\n          path\n        }\n      }\n    case UNSET_LISTENER:\n      return omit(state, [payload.id])\n    default:\n      return state\n  }\n}\n\n/**\n * Reducer for listeners state. Changed by `UNAUTHORIZED_ERROR`\n * and `LOGOUT` actions.\n * @param {object} [state=[]] - Current allListeners redux state\n * @param {object} action - Object containing the action that was dispatched\n * @param {string} action.type - Type of action that was dispatched\n * @param {string} action.path - Path of action that was dispatched\n * @param {object} action.payload - Payload object\n * @returns {object} allListeners state after reduction (used in listeners)\n * @private\n */\nfunction allListeners(state = [], { type, path, payload }) {\n  switch (type) {\n    case SET_LISTENER:\n      return [...state, payload.id]\n    case UNSET_LISTENER:\n      return state.filter((lId) => lId !== payload.id)\n    default:\n      return state\n  }\n}\n\n/**\n * Reducer for listeners state. Changed by `UNAUTHORIZED_ERROR`\n * and `LOGOUT` actions.\n * @param  {object} [state=[]] - Current listeners redux state\n * @param  {object} action - Object containing the action that was dispatched\n * @param  {string} action.type - Type of action that was dispatched\n * @returns {object} Profile state after reduction\n */\nexport const listenersReducer = combineReducers({\n  byId: listenersById,\n  allIds: allListeners\n})\n\n/**\n * Reducer for data state. Changed by `SET`, `SET_ORDERED`,`NO_VALUE`, and\n * `LOGOUT` actions.\n * @param  {object} [state={}] - Current data redux state\n * @param  {object} action - Object containing the action that was dispatched\n * @param  {string} action.type - Type of action that was dispatched\n * @param  {string} action.path - Path of action that was dispatched\n * @returns {object} Data state after reduction\n */\nexport const dataReducer = createDataReducer()\n\n/**\n * Reducer for ordered state. Changed by `SET`, `SET_ORDERED`,`NO_VALUE`, and\n * `LOGOUT` actions.\n * @param  {object} [state={}] - Current data redux state\n * @param  {object} action - Object containing the action that was dispatched\n * @param  {string} action.type - Type of action that was dispatched\n * @param  {string} action.path - Path of action that was dispatched\n * @returns {object} Data state after reduction\n */\nexport const orderedReducer = createDataReducer('ordered')\n"],"mappings":"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","ignoreList":[]}