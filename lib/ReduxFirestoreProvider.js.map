{"version":3,"file":"ReduxFirestoreProvider.js","names":["ReduxFirestoreProvider","props","arguments","length","children","config","dispatch","firebase","createFirestoreInstance","initializeAuth","extendedFirestoreInstance","React","useMemo","extendedFirebaseInstance","_reactReduxFirebaseExtended","createFirebaseInstance","_react","default","createElement","_ReduxFirestoreContext","Provider","value","defaultProps","propTypes","PropTypes","node","object","isRequired","func","bool","_default","exports","module"],"sources":["../src/ReduxFirestoreProvider.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport ReduxFirestoreContext from './ReduxFirestoreContext'\nimport createFirebaseInstance from './createFirebaseInstance'\n\n/**\n * @description Provider for context containing extended firestore instance created\n * by react-redux-firebase\n * @param {object} props - Component props\n * @param {object} props.config - react-redux-firebase config\n * @param {Function} props.dispatch - Redux's dispatch function\n * @param {object} props.firebase - Firebase library\n * @param {boolean} props.initializeAuth - Whether or not to initialize auth\n * @param {Function} props.createFirestoreInstance - Function for creating\n * extended firestore instance\n * @returns {React.Context.Provider} Provider for redux-firestore context\n * @see https://react-redux-firebase.com/docs/api/ReduxFirestoreProvider.html\n */\nfunction ReduxFirestoreProvider(props = {}) {\n  const {\n    children,\n    config,\n    dispatch,\n    firebase,\n    createFirestoreInstance,\n    initializeAuth\n  } = props\n  const extendedFirestoreInstance = React.useMemo(() => {\n    const extendedFirebaseInstance = firebase._reactReduxFirebaseExtended\n      ? firebase\n      : createFirebaseInstance(firebase, config, dispatch)\n    const extendedFirestoreInstance = createFirestoreInstance(\n      firebase,\n      config,\n      dispatch\n    )\n    // Initialize auth if not disabled\n    if (initializeAuth) {\n      extendedFirebaseInstance.initializeAuth()\n    }\n\n    return extendedFirestoreInstance\n  }, [firebase, config, dispatch, createFirestoreInstance, initializeAuth])\n  return (\n    <ReduxFirestoreContext.Provider value={extendedFirestoreInstance}>\n      {children}\n    </ReduxFirestoreContext.Provider>\n  )\n}\n\nReduxFirestoreProvider.defaultProps = {\n  initializeAuth: true\n}\n\nReduxFirestoreProvider.propTypes = {\n  children: PropTypes.node,\n  config: PropTypes.object.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  createFirestoreInstance: PropTypes.func.isRequired,\n  initializeAuth: PropTypes.bool,\n  firebase: PropTypes.object.isRequired\n}\n\nexport default ReduxFirestoreProvider\n"],"mappings":"sbAkBA,QAAS,CAAAA,sBAAsBA,CAAA,CAAa,IAAZ,CAAAC,KAAK,GAAAC,SAAA,CAAAC,MAAA,EAAAD,SAAA,aAAAA,SAAA,IAAG,CAAC,CAAC,CAEtCE,QAAQ,CAMNH,KAAK,CANPG,QAAQ,CACRC,MAAM,CAKJJ,KAAK,CALPI,MAAM,CACNC,QAAQ,CAINL,KAAK,CAJPK,QAAQ,CACRC,QAAQ,CAGNN,KAAK,CAHPM,QAAQ,CACRC,uBAAuB,CAErBP,KAAK,CAFPO,uBAAuB,CACvBC,cAAc,CACZR,KAAK,CADPQ,cAAc,CAEVC,yBAAyB,CAAGC,cAAK,CAACC,OAAO,CAAC,UAAM,IAC9C,CAAAC,wBAAwB,CAAGN,QAAQ,CAACO,2BAA2B,CACjEP,QAAQ,CACR,GAAAQ,+BAAsB,EAACR,QAAQ,CAAEF,MAAM,CAAEC,QAAQ,CAAC,CAChDI,yBAAyB,CAAGF,uBAAuB,CACvDD,QAAQ,CACRF,MAAM,CACNC,QACF,CAAC,CAMD,MAJI,CAAAG,cAAc,EAChBI,wBAAwB,CAACJ,cAAc,CAAC,CAAC,CAGpCC,yBACT,CAAC,CAAE,CAACH,QAAQ,CAAEF,MAAM,CAAEC,QAAQ,CAAEE,uBAAuB,CAAEC,cAAc,CAAC,CAAC,CACzE,MACE,CAAAO,MAAA,CAAAC,OAAA,CAAAC,aAAA,CAACC,sBAAA,CAAAF,OAAqB,CAACG,QAAQ,EAACC,KAAK,CAAEX,yBAA0B,EAC9DN,QAC6B,CAEpC,CAEAJ,sBAAsB,CAACsB,YAAY,CAAG,CACpCb,cAAc,GAChB,CAAC,CAEDT,sBAAsB,CAACuB,SAAS,CAAG,CACjCnB,QAAQ,CAAEoB,kBAAS,CAACC,IAAI,CACxBpB,MAAM,CAAEmB,kBAAS,CAACE,MAAM,CAACC,UAAU,CACnCrB,QAAQ,CAAEkB,kBAAS,CAACI,IAAI,CAACD,UAAU,CACnCnB,uBAAuB,CAAEgB,kBAAS,CAACI,IAAI,CAACD,UAAU,CAClDlB,cAAc,CAAEe,kBAAS,CAACK,IAAI,CAC9BtB,QAAQ,CAAEiB,kBAAS,CAACE,MAAM,CAACC,UAC7B,CAAC,KAAAG,QAAA,CAAAC,OAAA,CAAAd,OAAA,CAEcjB,sBAAsB,CAAAgC,MAAA,CAAAD,OAAA,CAAAA,OAAA,CAAAd,OAAA","ignoreList":[]}