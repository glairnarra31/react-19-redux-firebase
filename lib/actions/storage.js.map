{"version":3,"file":"storage.js","names":["FILE_UPLOAD_START","actionTypes","FILE_UPLOAD_ERROR","FILE_UPLOAD_COMPLETE","FILE_DELETE_START","FILE_DELETE_ERROR","FILE_DELETE_COMPLETE","uploadFile","dispatch","firebase","config","storage","Error","_ref","path","file","dbPath","_ref$options","options","progress","fileMetadata","metadata","logErrors","_","nameFromOptions","name","filename","meta","_objectSpread","type","payload","uploadPromise","uploadFileWithProgress","ref","concat","put","then","uploadTaskSnapshot","database","firestore","writeMetadataToDb","uploadTaskSnaphot","catch","err","console","error","message","Promise","reject","uploadFiles","_ref3","files","other","_objectWithoutProperties","_excluded","all","_map2","default","deleteFile","_ref4","wrapInDispatch","method","deleteFileFromFb","args","types"],"sources":["../../src/actions/storage.js"],"sourcesContent":["import { map } from 'lodash'\nimport { actionTypes } from '../constants'\nimport { wrapInDispatch } from '../utils/actions'\nimport {\n  deleteFile as deleteFileFromFb,\n  writeMetadataToDb,\n  uploadFileWithProgress\n} from '../utils/storage'\n\nconst {\n  FILE_UPLOAD_START,\n  FILE_UPLOAD_ERROR,\n  FILE_UPLOAD_COMPLETE,\n  FILE_DELETE_START,\n  FILE_DELETE_ERROR,\n  FILE_DELETE_COMPLETE\n} = actionTypes\n\n/**\n * Upload file to Firebase Storage with option to store\n * file metadata within Firebase Database\n * @param {Function} dispatch - Action dispatch function\n * @param {object} firebase - Internal firebase object\n * @param {object} config - Config object\n * @param {string} config.path - Location within Firebase Stroage at which to upload files.\n * @param {Blob} config.file - File Blob to be uploaded\n * @param {string} config.dbPath - Datbase path to write file meta data to\n * @param {object} config.options - Options\n * @param {string|Function} config.options.name - Name of file. If a function\n * is provided it recieves (fileObject, internalFirebase, config) as arguments.\n * @param {object} config.options.metdata - Metadata for file to be passed along\n * to storage.put calls\n * @param {object} config.options.documentId - Id of document to update with metadata if using Firestore\n * @returns {Promise} Resolves with meta object\n * @private\n */\nexport function uploadFile(dispatch, firebase, config) {\n  if (!firebase.storage) {\n    throw new Error('Firebase storage is required to upload files')\n  }\n  const { path, file, dbPath, options = { progress: false } } = config || {}\n  const { metadata: fileMetadata } = options || {}\n  const { logErrors } = firebase._.config\n\n  // File renaming through options (supporting string and function)\n  const nameFromOptions =\n    typeof options.name === 'function'\n      ? options.name(file, firebase, config)\n      : options.name\n  const filename = nameFromOptions || file.name\n\n  const meta = { ...config, filename }\n\n  // Dispatch start action\n  dispatch({ type: FILE_UPLOAD_START, payload: { ...config, filename } })\n\n  const uploadPromise = () =>\n    options.progress\n      ? uploadFileWithProgress(dispatch, firebase, {\n          path,\n          file,\n          filename,\n          meta,\n          fileMetadata\n        })\n      : firebase.storage().ref(`${path}/${filename}`).put(file, fileMetadata)\n\n  return uploadPromise()\n    .then((uploadTaskSnapshot) => {\n      if (!dbPath || (!firebase.database && !firebase.firestore)) {\n        dispatch({\n          type: FILE_UPLOAD_COMPLETE,\n          meta: { ...config, filename },\n          payload: {\n            uploadTaskSnapshot,\n            uploadTaskSnaphot: uploadTaskSnapshot // Preserving legacy typo\n          }\n        })\n        return {\n          uploadTaskSnapshot,\n          uploadTaskSnaphot: uploadTaskSnapshot // Preserving legacy typo\n        }\n      }\n\n      // Write File metadata to either Real Time Database or Firestore (depending on config)\n      return writeMetadataToDb({\n        firebase,\n        uploadTaskSnapshot,\n        dbPath,\n        options\n      }).then((payload) => {\n        dispatch({\n          type: FILE_UPLOAD_COMPLETE,\n          meta: { ...config, filename },\n          payload\n        })\n        return payload\n      })\n    })\n    .catch((err) => {\n      if (logErrors) {\n        /* eslint-disable no-console */\n        console.error &&\n          console.error(`RRF: Error uploading file: ${err.message || err}`, err)\n        /* eslint-enable no-console */\n      }\n      dispatch({ type: FILE_UPLOAD_ERROR, path, payload: err })\n      return Promise.reject(err)\n    })\n}\n\n/**\n * Upload multiple files to Firebase Storage with option to store\n * file's metadata within Firebase Database\n * @param {Function} dispatch - Action dispatch function\n * @param {object} firebase - Internal firebase object\n * @param {object} opts - Options object\n * @param {string} opts.path - Storage path to write files to\n * @param {Array} opts.files - List of files to be uploaded\n * @param {string} opts.dbPath - Datbase path to write file meta data to\n * @returns {Promise} Resolves with array of meta objects\n * @private\n */\nexport function uploadFiles(dispatch, firebase, { files, ...other }) {\n  return Promise.all(\n    map(files, (file) => uploadFile(dispatch, firebase, { file, ...other }))\n  )\n}\n\n/**\n * Delete File from Firebase Storage with option to remove meta\n * @param {Function} dispatch - Action dispatch function\n * @param {object} firebase - Internal firebase object\n * @param {object} opts - Options object\n * @param {string} opts.path - Storage path to write files to\n * @param {string} opts.dbPath - Datbase path to write file meta data to\n * @returns {Promise} Resolves with results of deleting a file from storage\n * @private\n */\nexport function deleteFile(dispatch, firebase, { path, dbPath }) {\n  return wrapInDispatch(dispatch, {\n    method: deleteFileFromFb,\n    args: [firebase, { path, dbPath }],\n    types: [FILE_DELETE_START, FILE_DELETE_COMPLETE, FILE_DELETE_ERROR]\n  })\n}\n"],"mappings":"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","ignoreList":[]}