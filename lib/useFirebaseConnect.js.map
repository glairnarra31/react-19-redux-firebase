{"version":3,"file":"useFirebaseConnect.js","names":["useFirebaseConnect","queriesConfig","firebase","useFirebase","eventRef","useRef","dataRef","data","useMemo","invokeArrayQuery","useEffect","_isEqual2","default","current","itemsToSubscribe","_differenceWith2","itemsToUnsubscribe","unWatchEvents","dispatch","getEventsFromInput","watchEvents","module","exports"],"sources":["../src/useFirebaseConnect.js"],"sourcesContent":["import { isEqual, differenceWith } from 'lodash'\nimport { useMemo, useEffect, useRef } from 'react'\nimport { watchEvents, unWatchEvents } from './actions/query'\nimport { getEventsFromInput, invokeArrayQuery } from './utils'\nimport useFirebase from './useFirebase'\n\n/**\n * @description Hook that automatically listens/unListens to provided firebase paths\n * using React's useEffect hook.\n * @param {Function|Array} queriesConfig - Object, string, or\n * array contains object or string for path to sync from Firebase or null if\n * hook doesn't need to sync. Can also be a function that returns an object,\n * a path string, or array of an object or a path string.\n * @see https://react-redux-firebase.com/docs/api/useFirebaseConnect.html\n * @example <caption>Ordered Data</caption>\n * import React from 'react'\n * import { useSelector } from 'react-redux'\n * import { useFirebaseConnect } from 'react-redux-firebase'\n *\n * export default function Todos() {\n *   // sync /todos from firebase into redux\n *   useFirebaseConnect(['todos'])\n *   // Connect to redux state using selector hook\n *   const todos = useSelector(state => state.firebase.data.todos)\n *   return (\n *     <div>\n *       {JSON.stringify(todos, null, 2)}\n *     </div>\n *   )\n * }\n * @example <caption>Data that depends on props</caption>\n * import React from 'react'\n * import { compose } from 'redux'\n * import { useSelector } from 'react-redux'\n * import { useFirebaseConnect } from 'react-redux-firebase'\n *\n * export default function Post({ postId }) {\n *   useFirebaseConnect([`posts/${postId}`]) // sync /posts/postId from firebase into redux\n *   const post = useSelector(({ firebase: { ordered: { posts } } }) => posts && posts[postId])\n *   return (\n *     <div>\n *       {JSON.stringify(post, null, 2)}\n *     </div>\n *   )\n * }\n */\nexport default function useFirebaseConnect(queriesConfig) {\n  const firebase = useFirebase()\n  const eventRef = useRef()\n  const dataRef = useRef()\n\n  const data = useMemo(() => invokeArrayQuery(queriesConfig), [queriesConfig])\n\n  useEffect(() => {\n    if (data !== null && !isEqual(data, dataRef.current)) {\n      const itemsToSubscribe = differenceWith(data, dataRef.current, isEqual)\n      const itemsToUnsubscribe = differenceWith(dataRef.current, data, isEqual)\n\n      dataRef.current = data\n      // UnWatch all current events\n      unWatchEvents(\n        firebase,\n        firebase.dispatch,\n        getEventsFromInput(itemsToUnsubscribe)\n      )\n      // Get watch events from new data\n      eventRef.current = getEventsFromInput(data)\n\n      // Watch new events\n      watchEvents(\n        firebase,\n        firebase.dispatch,\n        getEventsFromInput(itemsToSubscribe)\n      )\n    }\n  }, [data])\n\n  // Emulate componentWillUnmount\n  useEffect(() => {\n    return () => {\n      unWatchEvents(firebase, firebase.dispatch, eventRef.current)\n    }\n  }, [])\n}\n"],"mappings":"2cA8Ce,QAAS,CAAAA,kBAAkBA,CAACC,aAAa,CAAE,IAClD,CAAAC,QAAQ,CAAG,GAAAC,oBAAW,EAAC,CAAC,CACxBC,QAAQ,CAAG,GAAAC,aAAM,EAAC,CAAC,CACnBC,OAAO,CAAG,GAAAD,aAAM,EAAC,CAAC,CAElBE,IAAI,CAAG,GAAAC,cAAO,EAAC,iBAAM,GAAAC,uBAAgB,EAACR,aAAa,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC,CAE5E,GAAAS,gBAAS,EAAC,UAAM,CACd,GAAa,IAAI,GAAbH,IAAa,EAAI,CAAC,GAAAI,SAAA,CAAAC,OAAA,EAAQL,IAAI,CAAED,OAAO,CAACO,OAAO,CAAC,CAAE,IAC9C,CAAAC,gBAAgB,CAAG,GAAAC,gBAAA,CAAAH,OAAA,EAAeL,IAAI,CAAED,OAAO,CAACO,OAAO,CAAAF,SAAA,CAAAC,OAAS,CAAC,CACjEI,kBAAkB,CAAG,GAAAD,gBAAA,CAAAH,OAAA,EAAeN,OAAO,CAACO,OAAO,CAAEN,IAAI,CAAAI,SAAA,CAAAC,OAAS,CAAC,CAEzEN,OAAO,CAACO,OAAO,CAAGN,IAAI,CAEtB,GAAAU,oBAAa,EACXf,QAAQ,CACRA,QAAQ,CAACgB,QAAQ,CACjB,GAAAC,yBAAkB,EAACH,kBAAkB,CACvC,CAAC,CAEDZ,QAAQ,CAACS,OAAO,CAAG,GAAAM,yBAAkB,EAACZ,IAAI,CAAC,CAG3C,GAAAa,kBAAW,EACTlB,QAAQ,CACRA,QAAQ,CAACgB,QAAQ,CACjB,GAAAC,yBAAkB,EAACL,gBAAgB,CACrC,CACF,CACF,CAAC,CAAE,CAACP,IAAI,CAAC,CAAC,CAGV,GAAAG,gBAAS,EAAC,UAAM,CACd,MAAO,WAAM,CACX,GAAAO,oBAAa,EAACf,QAAQ,CAAEA,QAAQ,CAACgB,QAAQ,CAAEd,QAAQ,CAACS,OAAO,CAC7D,CACF,CAAC,CAAE,EAAE,CACP,CAACQ,MAAA,CAAAC,OAAA,CAAAA,OAAA,CAAAV,OAAA","ignoreList":[]}