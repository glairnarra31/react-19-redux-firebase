{"version":3,"file":"index.js","names":["isString","varToCheck","String","createCallable","f","_constant2","default","invokeArrayQuery","props","result","Array","isArray","getDisplayName","Component","displayName","name","wrapDisplayName","BaseComponent","hocName","concat","getChanges","data","arguments","length","prevData","added","_filter2","d","_some2","p","_isEqual2","removed"],"sources":["../../src/utils/index.js"],"sourcesContent":["import { constant, isEqual, some, filter } from 'lodash'\nexport { getEventsFromInput } from './events'\n\n/**\n * Check to see if a variable is a string\n * @param {any} varToCheck - Variable to check for type string\n * @returns {boolean} Whether or not the provided value is a string\n */\nexport function isString(varToCheck) {\n  return typeof varToCheck === 'string' || varToCheck instanceof String\n}\n\n/**\n * @private\n * @param {Function|object|Array|string} f function or value of return for new function\n * @returns {any} Callable\n */\nexport function createCallable(f) {\n  return typeof f === 'function' ? f : constant(f)\n}\n\n/**\n * Invoke function or handle existing array to create array\n * query settings\n * @param {any} f - Function or array of queries\n * @param {object} props - Component props\n * @returns {Array|null} Array of query settings\n */\nexport function invokeArrayQuery(f, props) {\n  const result = createCallable(f)(props)\n  if (Array.isArray(result)) {\n    return result\n  }\n  if (!result) {\n    return null\n  }\n  return [result]\n}\n\n/**\n * Get the displayName field of a component falling\n * back to name field then finally to \"component\".\n * @param {React.Component} Component - Component from\n * which to get displayName\n * @returns {string} Display name of component\n */\nfunction getDisplayName(Component) {\n  if (typeof Component === 'string') {\n    return Component\n  }\n\n  if (!Component) {\n    return undefined\n  }\n\n  return Component.displayName || Component.name || 'Component'\n}\n\n/**\n * Get provided react component's display name and wrap with with a passed name.\n * @param {React.Component} BaseComponent - Component from which to get name to wrap\n * @param {string} hocName - Name of wrapping hoc\n * @returns {string} Wrapped display name for component\n */\nexport function wrapDisplayName(BaseComponent, hocName) {\n  return `${hocName}(${getDisplayName(BaseComponent)})`\n}\n\n/**\n * Get changes between two query settings arrays\n * @param {Array} data - Query settings array\n * @param {Array} prevData - Previous query settings array\n * @returns {object} Object containing added and removed value changes\n */\nexport function getChanges(data = [], prevData = []) {\n  const result = {}\n  result.added = filter(data, (d) => !some(prevData, (p) => isEqual(d, p)))\n  result.removed = filter(prevData, (p) => !some(data, (d) => isEqual(p, d)))\n  return result\n}\n"],"mappings":"gsBAQO,QAAS,CAAAA,QAAQA,CAACC,UAAU,CAAE,CACnC,MAA6B,QAAQ,EAA9B,MAAO,CAAAA,UAAuB,EAAIA,UAAU,WAAY,CAAAC,MACjE,CAOO,QAAS,CAAAC,cAAcA,CAACC,CAAC,CAAE,CAChC,MAAoB,UAAU,EAAvB,MAAO,CAAAA,CAAgB,CAAGA,CAAC,CAAG,GAAAC,UAAA,CAAAC,OAAA,EAASF,CAAC,CACjD,CASO,QAAS,CAAAG,gBAAgBA,CAACH,CAAC,CAAEI,KAAK,CAAE,CACzC,GAAM,CAAAC,MAAM,CAAGN,cAAc,CAACC,CAAC,CAAC,CAACI,KAAK,CAAC,OACnC,CAAAE,KAAK,CAACC,OAAO,CAACF,MAAM,CAAC,CAChBA,MAAM,CAEVA,MAAM,CAGJ,CAACA,MAAM,CAAC,CAFN,IAGX,CASA,QAAS,CAAAG,cAAcA,CAACC,SAAS,CAAE,OACR,QAAQ,EAA7B,MAAO,CAAAA,SAAsB,CACxBA,SAAS,CAGbA,SAAS,CAIPA,SAAS,CAACC,WAAW,EAAID,SAAS,CAACE,IAAI,EAAI,WAAW,OAC/D,CAQO,QAAS,CAAAC,eAAeA,CAACC,aAAa,CAAEC,OAAO,CAAE,CACtD,SAAAC,MAAA,CAAUD,OAAO,MAAAC,MAAA,CAAIP,cAAc,CAACK,aAAa,CAAC,KACpD,CAQO,QAAS,CAAAG,UAAUA,CAAA,CAA2B,IAA1B,CAAAC,IAAI,GAAAC,SAAA,CAAAC,MAAA,WAAAD,SAAA,IAAAA,SAAA,IAAG,EAAE,CAAEE,QAAQ,GAAAF,SAAA,CAAAC,MAAA,WAAAD,SAAA,IAAAA,SAAA,IAAG,EAAE,CAC3Cb,MAAM,CAAG,CAAC,CAAC,CAGjB,MAFA,CAAAA,MAAM,CAACgB,KAAK,CAAG,GAAAC,QAAA,CAAApB,OAAA,EAAOe,IAAI,CAAE,SAACM,CAAC,QAAK,CAAC,GAAAC,MAAA,CAAAtB,OAAA,EAAKkB,QAAQ,CAAE,SAACK,CAAC,QAAK,GAAAC,SAAA,CAAAxB,OAAA,EAAQqB,CAAC,CAAEE,CAAC,CAAC,EAAC,EAAC,CACzEpB,MAAM,CAACsB,OAAO,CAAG,GAAAL,QAAA,CAAApB,OAAA,EAAOkB,QAAQ,CAAE,SAACK,CAAC,QAAK,CAAC,GAAAD,MAAA,CAAAtB,OAAA,EAAKe,IAAI,CAAE,SAACM,CAAC,QAAK,GAAAG,SAAA,CAAAxB,OAAA,EAAQuB,CAAC,CAAEF,CAAC,CAAC,EAAC,EAAC,CACpElB,MACT","ignoreList":[]}