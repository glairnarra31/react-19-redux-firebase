{"version":3,"file":"withFirebase.js","names":["withFirebase","WrappedComponent","WithFirebase","props","_react","default","createElement","_ReactReduxFirebaseContext","Consumer","firebase","_extends","dispatch","displayName","wrapDisplayName","wrappedComponent","hoistStatics","module","exports"],"sources":["../src/withFirebase.js"],"sourcesContent":["import React from 'react'\nimport hoistStatics from 'hoist-non-react-statics'\nimport { wrapDisplayName } from './utils'\nimport ReactReduxFirebaseContext from './ReactReduxFirebaseContext'\n\n/**\n * @augments React.Component\n * @description Higher Order Component that provides `firebase` and\n * `dispatch` as a props to React Components.\n * **NOTE**: This version of the Firebase library has extra methods, config,\n * and functionality which give it it's capabilities such as dispatching\n * actions.\n * @param {React.Component} WrappedComponent - React component to wrap\n * @returns {Function} - Which accepts a component to wrap and returns the\n * wrapped component\n * @see http://react-redux-firebase.com/docs/api/withFirebase.html\n * @example <caption>Basic</caption>\n * import React from 'react'\n * import { withFirebase } from 'react-redux-firebase'\n *\n * function AddTodo({ firebase: { push } }) {\n *   return (\n *     <div>\n *       <button onClick={() => push('todos', { done: false, text: 'Sample' })}>\n *         Add Sample Todo\n *       </button>\n *     </div>\n *   )\n * }\n *\n * export default withFirebase(AddTodo)\n * @example <caption>Within HOC Composition</caption>\n * import React from 'react'\n * import { compose } from 'redux' // can also come from recompose\n * import { withHandlers } from 'recompose'\n * import { withFirebase } from 'react-redux-firebase'\n *\n * function AddTodo({ addTodo }) {\n *   return (\n *     <div>\n *       <button onClick={addTodo}>\n *         Add Sample Todo\n *       </button>\n *     </div>\n *   )\n * }\n *\n * const enhance = compose(\n *   withFirebase,\n *   withHandlers({\n *     addTodo: props => () =>\n *        props.firestore.add(\n *          { collection: 'todos' },\n *          { done: false, text: 'Sample' }\n *        )\n *   })\n * )\n *\n * export default enhance(AddTodo)\n */\nexport default function withFirebase(WrappedComponent) {\n  /**\n   * WithFirebase wrapper component\n   * @param {object} props - Component props\n   * @returns {React.Component} WrappedComponent wrapped with firebase context\n   */\n  function WithFirebase(props) {\n    return (\n      <ReactReduxFirebaseContext.Consumer>\n        {(firebase) => (\n          <WrappedComponent\n            firebase={firebase}\n            dispatch={firebase && firebase.dispatch}\n            {...props}\n          />\n        )}\n      </ReactReduxFirebaseContext.Consumer>\n    )\n  }\n\n  WithFirebase.displayName = wrapDisplayName(WrappedComponent, 'withFirebase')\n  WithFirebase.wrappedComponent = WrappedComponent\n\n  return hoistStatics(WithFirebase, WrappedComponent)\n}\n"],"mappings":"4oBA4De,QAAS,CAAAA,YAAYA,CAACC,gBAAgB,CAAE,CAMrD,QAAS,CAAAC,YAAYA,CAACC,KAAK,CAAE,CAC3B,MACE,CAAAC,MAAA,CAAAC,OAAA,CAAAC,aAAA,CAACC,0BAAA,CAAAF,OAAyB,CAACG,QAAQ,MAChC,SAACC,QAAQ,QACR,CAAAL,MAAA,CAAAC,OAAA,CAAAC,aAAA,CAACL,gBAAgB,CAAAS,QAAA,EACfD,QAAQ,CAAEA,QAAS,CACnBE,QAAQ,CAAEF,QAAQ,EAAIA,QAAQ,CAACE,QAAS,EACpCR,KAAK,CACV,CAAC,CAE8B,CAExC,CAKA,MAHA,CAAAD,YAAY,CAACU,WAAW,CAAG,GAAAC,sBAAe,EAACZ,gBAAgB,CAAE,cAAc,CAAC,CAC5EC,YAAY,CAACY,gBAAgB,CAAGb,gBAAgB,CAEzC,GAAAc,6BAAY,EAACb,YAAY,CAAED,gBAAgB,CACpD,CAACe,MAAA,CAAAC,OAAA,CAAAA,OAAA,CAAAZ,OAAA","ignoreList":[]}