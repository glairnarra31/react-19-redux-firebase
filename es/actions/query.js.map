{"version":3,"file":"query.js","names":["watchEvent","firebase","dispatch","options","database","Error","type","path","populates","queryParams","queryId","isQuery","storeAs","logErrors","_","config","watchPath","concat","id","getQueryIdFromPath","counter","getWatcherCount","unsetWatcher","setWatcher","ref","child","orderByKey","limitToFirst","once","then","snapshot","val","actionTypes","NO_VALUE","catch","err","ERROR","payload","Promise","reject","query","applyParamsToQuery","START","populateAndDispatch","data","SET","ordered","orderedFromSnapshot","UNAUTHORIZED_ERROR","on","resultPath","key","value","console","log","unWatchEvent","_ref","watchEvents","events","Array","isArray","map","event","unWatchEvents","forEach","remove","arguments","length","_options$dispatchActi","dispatchAction","dispatchRemoveAction","REMOVE"],"sources":["../../src/actions/query.js"],"sourcesContent":["import { actionTypes } from '../constants'\nimport {\n  orderedFromSnapshot,\n  populateAndDispatch,\n  applyParamsToQuery,\n  getWatcherCount,\n  setWatcher,\n  unsetWatcher,\n  getQueryIdFromPath\n} from '../utils/query'\n\n/**\n * Watch a path in Firebase Real Time Database\n * @param {object} firebase - Internal firebase object\n * @param {Function} dispatch - Action dispatch function\n * @param {object} options - Event options object\n * @param {string} options.type - Type of event to watch for (defaults to value)\n * @param {string} options.path - Path to watch with watcher\n * @param {Array} options.queryParams - List of parameters for the query\n * @param {string} options.queryId - id of the query\n * @param {boolean} options.isQuery - id of the query\n * @param {string} options.storeAs - Location within redux to store value\n * @returns {Promise|void} Returns promise if query is a promise\n */\nexport function watchEvent(firebase, dispatch, options) {\n  if (!firebase.database || typeof firebase.database !== 'function') {\n    throw new Error('Firebase database is required to create watchers')\n  }\n  const {\n    type,\n    path,\n    populates,\n    queryParams,\n    queryId,\n    isQuery,\n    storeAs\n  } = options\n  const {\n    config: { logErrors }\n  } = firebase._\n\n  const watchPath = !storeAs ? path : `${path}@${storeAs}`\n  const id = queryId || getQueryIdFromPath(path)\n  const counter = getWatcherCount(firebase, type, watchPath, id)\n\n  if (counter > 0) {\n    if (id) {\n      unsetWatcher(firebase, dispatch, type, path, id)\n    }\n  }\n\n  setWatcher(firebase, dispatch, type, watchPath, id)\n\n  if (counter > 0) {\n    return\n  }\n\n  if (type === 'first_child') {\n    return firebase\n      .database()\n      .ref()\n      .child(path)\n      .orderByKey()\n      .limitToFirst(1)\n      .once('value')\n      .then((snapshot) => {\n        if (snapshot.val() === null) {\n          dispatch({\n            type: actionTypes.NO_VALUE,\n            path: storeAs || path\n          })\n        }\n        return snapshot\n      })\n      .catch((err) => {\n        dispatch({\n          type: actionTypes.ERROR,\n          path: storeAs || path,\n          payload: err\n        })\n        return Promise.reject(err)\n      })\n  }\n\n  let query = firebase.database().ref().child(path)\n\n  if (isQuery) {\n    query = applyParamsToQuery(queryParams, query)\n  }\n\n  dispatch({ type: actionTypes.START, path: storeAs || path })\n\n  // Handle once queries\n  if (type === 'once') {\n    return query\n      .once('value')\n      .then((snapshot) => {\n        if (snapshot.val() === null) {\n          return dispatch({\n            type: actionTypes.NO_VALUE,\n            path: storeAs || path\n          })\n        }\n        // dispatch normal event if no populates exist\n        if (!populates) {\n          // create an array for preserving order of children under ordered\n          return dispatch({\n            type: actionTypes.SET,\n            path: storeAs || path,\n            data: snapshot.val(),\n            ordered: orderedFromSnapshot(snapshot)\n          })\n        }\n        // populate and dispatch associated actions if populates exist\n        return populateAndDispatch(firebase, dispatch, {\n          path,\n          storeAs,\n          snapshot,\n          data: snapshot.val(),\n          populates\n        })\n      })\n      .catch((err) => {\n        dispatch({\n          type: actionTypes.UNAUTHORIZED_ERROR,\n          payload: err\n        })\n        return Promise.reject(err)\n      })\n  }\n  // Handle all other queries\n\n  /* istanbul ignore next: is run by tests but doesn't show in coverage */\n  query.on(\n    type,\n    (snapshot) => {\n      const data = type === 'child_removed' ? undefined : snapshot.val()\n      const resultPath =\n        storeAs || type === 'value' ? path : `${path}/${snapshot.key}`\n\n      // Dispatch standard event if no populates exists\n      if (!populates) {\n        // create an array for preserving order of children under ordered\n        const ordered =\n          type === 'child_added'\n            ? [{ key: snapshot.key, value: snapshot.val() }]\n            : orderedFromSnapshot(snapshot)\n        return dispatch({\n          type: actionTypes.SET,\n          path: storeAs || resultPath,\n          data,\n          ordered\n        })\n      }\n      // populate and dispatch associated actions if populates exist\n      return populateAndDispatch(firebase, dispatch, {\n        path,\n        storeAs,\n        snapshot,\n        data: snapshot.val(),\n        populates\n      })\n    },\n    (err) => {\n      if (logErrors) {\n        // eslint-disable-next-line no-console\n        console.log(\n          `Error retrieving data for path: ${path}, storeAs: ${storeAs}. Firebase:`,\n          err\n        )\n      }\n      dispatch({\n        type: actionTypes.ERROR,\n        storeAs,\n        path,\n        payload: err\n      })\n    }\n  )\n}\n\n/**\n * Remove watcher from an event\n * @param {object} firebase - Internal firebase object\n * @param {Function} dispatch - Action dispatch function\n * @param {object} config - Config object\n * @param {string} config.type - Type for which to remove the watcher (\n * value, once, first_child etc.)\n * @param {string} config.path - Path of watcher to remove\n * @param {string} config.storeAs - Path which to store results within in\n * redux store\n * @param {string} config.queryId - Id of the query (used for idendifying)\n * in internal watchers list\n */\nexport function unWatchEvent(\n  firebase,\n  dispatch,\n  { type, path, storeAs, queryId }\n) {\n  const watchPath = !storeAs ? path : `${path}@${storeAs}`\n  unsetWatcher(firebase, dispatch, type, watchPath, queryId)\n}\n\n/**\n * Add watchers to a list of events\n * @param {object} firebase - Internal firebase object\n * @param {Function} dispatch - Action dispatch function\n * @param {Array} events - List of events for which to add watchers\n * @returns {Array} ARray of watchEvent results\n */\nexport function watchEvents(firebase, dispatch, events) {\n  if (!Array.isArray(events)) {\n    throw new Error('Events config must be an Array')\n  }\n  return events.map((event) => watchEvent(firebase, dispatch, event))\n}\n\n/**\n * Remove watchers from a list of events\n * @param {object} firebase - Internal firebase object\n * @param {Function} dispatch - Action dispatch function\n * @param {Array} events - List of events for which to remove watchers\n */\nexport function unWatchEvents(firebase, dispatch, events) {\n  events?.forEach((event) => unWatchEvent(firebase, dispatch, event))\n}\n\n/**\n * Add watchers to a list of events\n * @param {object} firebase - Internal firebase object\n * @param {Function} dispatch - Action dispatch function\n * @param {string} path - Path of ref to be removed\n * @param {object} [options={}] - Configuration for removal\n * @param {boolean} [options.dispatchAction=true] - Whether or not to dispatch\n * REMOVE action\n * @returns {Promise} Resolves with path\n */\nexport function remove(firebase, dispatch, path, options = {}) {\n  const { dispatchAction = true } = options\n  const { dispatchRemoveAction } = firebase._.config\n  return firebase\n    .database()\n    .ref(path)\n    .remove()\n    .then(() => {\n      if (dispatchRemoveAction && dispatchAction) {\n        dispatch({ type: actionTypes.REMOVE, path })\n      }\n      return path\n    })\n    .catch((err) => {\n      dispatch({ type: actionTypes.ERROR, payload: err })\n      return Promise.reject(err)\n    })\n}\n"],"mappings":"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","ignoreList":[]}